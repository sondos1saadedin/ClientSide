{"version":3,"file":"dx-react-grid.umd.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/utils/state-helper.js","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/virtual-table-utils.js","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/toolbar.jsx","../src/plugins/search-state.jsx","../src/plugins/search-panel.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <Plugin>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"header\" />\n        <Template name=\"body\" />\n        <Template name=\"footer\" />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Template, TemplatePlaceholder, Plugin, TemplateConnector } from '@devexpress/dx-react-core';\n\nimport { getMessagesFormatter, columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'TableColumnVisibility' },\n  { name: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.buttonRef = this.buttonRef.bind(this);\n  }\n  buttonRef(button) {\n    this.button = button;\n  }\n  handleToggle() {\n    this.setState({ visible: !this.state.visible });\n  }\n  handleHide() {\n    this.setState({ visible: false });\n  }\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <Plugin\n        name=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {(\n              { columns, hiddenColumnNames, isColumnTogglingEnabled },\n              { toggleColumnVisibility },\n            ) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.buttonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                  active={visible}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                  toggle={this.handleToggle}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumnNames)\n                      .map((item) => {\n                        const { name: columnName } = item.column;\n                        const togglingEnabled = isColumnTogglingEnabled(columnName);\n                        return (\n                          <Item\n                            key={columnName}\n                            item={item}\n                            disabled={!togglingEnabled}\n                            onToggle={() => toggleColumnVisibility(columnName)}\n                          />\n                      );\n                    })}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n","const STATE_CONSISTENCY_TIMEOUT = 1000 / 60;\n\nexport const createStateHelper = (component, controlledStateProperties = {}) => {\n  const stateConsistencyTimers = {};\n  const checkStateConsistency = (propertyName) => {\n    if (component.props[propertyName] !== undefined\n      && component.props[propertyName] !== component.state[propertyName]) {\n      component.setState({ [propertyName]: component.props[propertyName] });\n    }\n  };\n  const notifyStateChange = (nextState, state) => {\n    Object.keys(controlledStateProperties).forEach((propertyName) => {\n      const changeEvent = controlledStateProperties[propertyName]();\n      if (changeEvent && nextState[propertyName] !== state[propertyName]) {\n        changeEvent(nextState[propertyName]);\n        clearTimeout(stateConsistencyTimers[propertyName]);\n        stateConsistencyTimers[propertyName] = setTimeout(\n          checkStateConsistency.bind(null, propertyName),\n          STATE_CONSISTENCY_TIMEOUT,\n        );\n      }\n    });\n  };\n\n  let lastStateUpdater = null;\n  let initialState = null;\n  const applyReducer = (reduce, payload, callback) => {\n    const stateUpdater = (prevState) => {\n      if (initialState === null) {\n        initialState = prevState;\n      }\n      const stateChange = reduce({ ...prevState }, payload);\n      const state = { ...prevState, ...stateChange };\n\n      if (typeof callback === 'function') {\n        callback(state, prevState);\n      }\n      if (stateUpdater === lastStateUpdater) {\n        notifyStateChange(state, initialState);\n        initialState = null;\n      }\n\n      return stateChange;\n    };\n    lastStateUpdater = stateUpdater;\n    component.setState(stateUpdater);\n  };\n  const applyFieldReducer = (field, reduce, payload) => {\n    applyReducer(state => ({\n      [field]: reduce(state[field], payload),\n    }));\n  };\n\n  return {\n    applyReducer,\n    applyFieldReducer,\n  };\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeColumnFilter, getColumnExtensionValueGetter, pushFilterExpression } from '@devexpress/dx-grid-core';\n\nimport { createStateHelper } from '../utils/state-helper';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) =>\n  getColumnExtensionValueGetter(columnExtensions, 'filteringEnabled', defaultValue);\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.filters || props.defaultFilters,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        filters: () => this.props.onFiltersChange,\n      },\n    );\n\n    this.changeColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', changeColumnFilter);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      filters,\n    } = nextProps;\n    this.setState({\n      ...filters !== undefined ? { filters } : null,\n    });\n  }\n  render() {\n    const { filters } = this.state;\n    const { columnExtensions, columnFilteringEnabled } = this.props;\n\n\n    return (\n      <Plugin\n        name=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Getter name=\"filterExpression\" computed={pushFilterExpression(filters)} />\n        <Getter\n          name=\"isColumnFilteringEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnFilteringEnabled)}\n        />\n        <Action name=\"changeColumnFilter\" action={this.changeColumnFilter} />\n      </Plugin>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnFilteringEnabled: PropTypes.bool,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: [],\n  onFiltersChange: undefined,\n  columnExtensions: undefined,\n  columnFilteringEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { filteredRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState', optional: true },\n  { name: 'SearchState', optional: true },\n];\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName =>\n      getColumnExtension(columnExtensions, columnName).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filterExpression,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) => filteredRows(\n      rows,\n      filterExpression,\n      getCellValue,\n      getColumnPredicate,\n      isGroupRow,\n      getRowLevelKey,\n    );\n\n    return (\n      <Plugin\n        name=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n  startEditRows,\n  stopEditRows,\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n  deleteRows,\n  cancelDeletedRows,\n\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) =>\n  getColumnExtensionValueGetter(columnExtensions, 'editingEnabled', defaultValue);\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingRowIds: props.editingRowIds || props.defaultEditingRowIds,\n      addedRows: props.addedRows || props.defaultAddedRows,\n      rowChanges: props.rowChanges || props.defaultRowChanges,\n      deletedRowIds: props.deletedRowIds || props.defaultDeletedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        editingRowIds: () => this.props.onEditingRowIdsChange,\n        addedRows: () => this.props.onAddedRowsChange,\n        rowChanges: () => this.props.onRowChangesChange,\n        deletedRowIds: () => this.props.onDeletedRowIdsChange,\n      },\n    );\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRowIds', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'rowChanges', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        changed: changedRowsByIds(this.state.rowChanges, rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        added: addedRowsByIds(this.state.addedRows, rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRowIds', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      editingRowIds,\n      rowChanges,\n      addedRows,\n      deletedRowIds,\n    } = nextProps;\n    this.setState({\n      ...editingRowIds !== undefined ? { editingRowIds } : null,\n      ...rowChanges !== undefined ? { rowChanges } : null,\n      ...addedRows !== undefined ? { addedRows } : null,\n      ...deletedRowIds !== undefined ? { deletedRowIds } : null,\n    });\n  }\n  render() {\n    const { createRowChange, columnExtensions, columnEditingEnabled } = this.props;\n    const {\n      editingRowIds, rowChanges, addedRows, deletedRowIds,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRowIds\" value={editingRowIds} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"rowChanges\" value={rowChanges} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRowIds\" value={deletedRowIds} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n\n        <Getter\n          name=\"isColumnEditingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnEditingEnabled)}\n        />\n      </Plugin>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnEditingEnabled: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n\n  editingRowIds: PropTypes.array,\n  defaultEditingRowIds: PropTypes.array,\n  onEditingRowIdsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  rowChanges: PropTypes.object,\n  defaultRowChanges: PropTypes.object,\n  onRowChangesChange: PropTypes.func,\n\n  deletedRowIds: PropTypes.array,\n  defaultDeletedRowIds: PropTypes.array,\n  onDeletedRowIdsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnEditingEnabled: true,\n  columnExtensions: undefined,\n\n  editingRowIds: undefined,\n  defaultEditingRowIds: [],\n  onEditingRowIdsChange: undefined,\n\n  rowChanges: undefined,\n  defaultRowChanges: {},\n  onRowChangesChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRowIds: undefined,\n  defaultDeletedRowIds: [],\n  onDeletedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.currentPage || props.defaultCurrentPage,\n      pageSize: props.pageSize !== undefined ? props.pageSize : props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        currentPage: () => this.props.onCurrentPageChange,\n        pageSize: () => this.props.onPageSizeChange,\n      },\n    );\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      currentPage,\n      pageSize,\n    } = nextProps;\n    this.setState({\n      ...currentPage !== undefined ? { currentPage } : null,\n      ...pageSize !== undefined ? { pageSize } : null,\n    });\n  }\n  render() {\n    const { pageSize, currentPage } = this.state;\n\n    return (\n      <Plugin\n        name=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </Plugin>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { paginatedRows, rowsWithPageHeaders, pageCount, rowCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nconst clamp = (value, max) => Math.max(Math.min(value, max), 0);\n\nconst rowsWithHeadersComputed = ({ rows, pageSize, getRowLevelKey }) =>\n  rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = ({ rows, pageSize, currentPage }) =>\n  paginatedRows(rows, pageSize, currentPage);\nconst currentPageComputed = ({ currentPage, totalCount, pageSize }, { setCurrentPage }) => {\n  const totalPages = pageCount(totalCount, pageSize);\n  const adjustedCurrentPage = clamp(currentPage, totalPages - 1);\n  if (currentPage !== adjustedCurrentPage) {\n    setTimeout(() => setCurrentPage(adjustedCurrentPage));\n  }\n  return adjustedCurrentPage;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <Plugin\n        name=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </Plugin>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  changeColumnGrouping,\n  toggleExpandedGroups,\n  draftColumnGrouping,\n  cancelColumnGroupingDraft,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst dependencies = [\n  { name: 'SortingState', optional: true },\n];\n\nconst adjustSortIndex = (sortIndex, grouping, sorting) =>\n  Math.max(\n    grouping.slice(0, sortIndex).reduce(\n      (acc, columnGrouping) => {\n        const columnSortingIndex = sorting.findIndex(columnSorting =>\n          columnSorting.columnName === columnGrouping.columnName);\n        return (columnSortingIndex === -1 ? acc - 1 : acc);\n      },\n      sortIndex,\n    ),\n    0,\n  );\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) =>\n  getColumnExtensionValueGetter(columnExtensions, 'groupingEnabled', defaultValue);\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping || props.defaultGrouping,\n      draftGrouping: null,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        grouping: () => this.props.onGroupingChange,\n        expandedGroups: () => this.props.onExpandedGroupsChange,\n      },\n    );\n\n    this.changeColumnGrouping = this.changeColumnGrouping.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftColumnGrouping = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftColumnGrouping);\n    this.cancelColumnGroupingDraft = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelColumnGroupingDraft);\n    this.changeColumnSorting = this.changeColumnSorting.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      grouping,\n      expandedGroups,\n    } = nextProps;\n    this.setState({\n      ...grouping !== undefined ? { grouping } : null,\n      ...expandedGroups !== undefined ? { expandedGroups } : null,\n    });\n  }\n  changeColumnSorting(\n    { columnName, keepOther, ...restParams },\n    { sorting },\n    { changeColumnSorting },\n  ) {\n    const { grouping } = this.state;\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      changeColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    changeColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n  changeColumnGrouping({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      changeColumnGrouping,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { changeColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        changeColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n  render() {\n    const { grouping, draftGrouping, expandedGroups } = this.state;\n    const { columnExtensions, columnGroupingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping || grouping} />\n        <Getter\n          name=\"isColumnGroupingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnGroupingEnabled)}\n        />\n        <Action name=\"changeColumnGrouping\" action={this.changeColumnGrouping} />\n        <Action name=\"draftColumnGrouping\" action={this.draftColumnGrouping} />\n        <Action name=\"cancelColumnGroupingDraft\" action={this.cancelColumnGroupingDraft} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnGroupingEnabled: PropTypes.bool,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n  columnExtensions: undefined,\n  columnGroupingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName =>\n      getColumnExtension(columnExtensions, columnName).criteria;\n\n    const groupedRowsComputed = ({ rows, grouping, getCellValue }) =>\n      groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <Plugin\n        name=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) =>\n  customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = ({ rows, grouping }) =>\n      customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <Plugin\n        name=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={appliedExpandedGroups} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleSelection } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.selection || props.defaultSelection,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        selection: () => this.props.onSelectionChange,\n      },\n    );\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', toggleSelection);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      selection,\n    } = nextProps;\n    this.setState({\n      ...selection !== undefined ? { selection } : null,\n    });\n  }\n  render() {\n    const { selection } = this.state;\n\n    return (\n      <Plugin\n        name=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={selection} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </Plugin>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: [],\n  onSelectionChange: undefined,\n};\n","import * as React from 'react';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  rowsWithAvailableToSelect,\n  someSelected,\n  allSelected,\n  unwrapSelectedRows,\n} from '@devexpress/dx-grid-core';\n\nconst rowsWithAvailableToSelectComputed = ({ rows, getRowId, isGroupRow }) =>\n  rowsWithAvailableToSelect(rows, getRowId, isGroupRow);\nconst allSelectedComputed = ({ rows, selection }) =>\n  allSelected(rows, selection);\nconst someSelectedComputed = ({ rows, selection }) =>\n  someSelected(rows, selection);\nconst selectAllAvailableComputed = ({ rows: { availableToSelect } }) =>\n  !!availableToSelect.length;\nconst toggleSelectAll = (state, { rows: { availableToSelect } }, { toggleSelection }) => {\n  toggleSelection({ rowIds: availableToSelect, state });\n};\nconst unwrapRowsComputed = ({ rows }) => unwrapSelectedRows(rows);\n\nconst pluginDependencies = [\n  { name: 'SelectionState' },\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedSelection extends React.PureComponent {\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithAvailableToSelectComputed} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" computed={selectAllAvailableComputed} />\n        <Action name=\"toggleSelectAll\" action={toggleSelectAll} />\n        <Getter name=\"rows\" computed={unwrapRowsComputed} />\n      </Plugin>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport {\n  changeColumnSorting,\n  getColumnExtensionValueGetter,\n  getPersistentSortedColumns,\n  calculateKeepOther,\n} from '@devexpress/dx-grid-core';\n\nimport { createStateHelper } from '../utils/state-helper';\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) =>\n  getColumnExtensionValueGetter(columnExtensions, 'sortingEnabled', defaultValue);\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.sorting || props.defaultSorting,\n    };\n\n    const persistentSortedColumns =\n      getPersistentSortedColumns(this.state.sorting, props.columnExtensions);\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        sorting: () => this.props.onSortingChange,\n      },\n    );\n\n    this.changeColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, (prevState, payload) => {\n        const keepOther =\n          calculateKeepOther(prevState.sorting, payload.keepOther, persistentSortedColumns);\n        return changeColumnSorting(prevState, { ...payload, keepOther });\n      });\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      sorting,\n    } = nextProps;\n    this.setState({\n      ...sorting !== undefined ? { sorting } : null,\n    });\n  }\n  render() {\n    const { sorting } = this.state;\n    const { columnExtensions, columnSortingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Getter\n          name=\"isColumnSortingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnSortingEnabled)}\n        />\n        <Action name=\"changeColumnSorting\" action={this.changeColumnSorting} />\n      </Plugin>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n  columnSortingEnabled: PropTypes.bool,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n  columnExtensions: undefined,\n  columnSortingEnabled: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Plugin } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName =>\n      getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) =>\n      sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <Plugin\n        name=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </Plugin>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n  tableHeaderRowsWithReordering(tableHeaderRows);\n\nexport class TableColumnReordering extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n  getState() {\n    const {\n      order = this.state.order,\n    } = this.props;\n    return {\n      ...this.state,\n      order,\n    };\n  }\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n  ensureCellDimensionGetters(tableColumns) {\n    Object.keys(this.cellDimensionGetters)\n      .forEach((columnName) => {\n        const columnIndex = tableColumns\n          .findIndex(({ type, column }) => type === TABLE_DATA_TYPE && column.name === columnName);\n        if (columnIndex === -1) {\n          delete this.cellDimensionGetters[columnName];\n        }\n      });\n  }\n  storeCellDimensionsGetter(tableColumn, getter, tableColumns) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = getter;\n    }\n    this.ensureCellDimensionGetters(tableColumns);\n  }\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = ({ tableColumns }) =>\n      orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <Plugin\n        name=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) => (\n                <Cell\n                  {...params}\n                  getCellDimensions={getter =>\n                    this.storeCellDimensionsGetter(params.tableColumn, getter, tableColumns)}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnReordering.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReordering.defaultProps = {\n  order: undefined,\n  defaultOrder: [],\n  onOrderChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Plugin,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  isNoDataTableRow,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) =>\n  tableRowsWithDataRows(rows, getRowId);\n\nconst pluginDependencies = [\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class Table extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages, containerComponent,\n      tableComponent, headComponent, bodyComponent, fixedHeaderComponent,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ columns }) =>\n      tableColumnsWithDataRows(columns, columnExtensions);\n\n    return (\n      <Plugin\n        name=\"Table\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({ tableHeaderRows: headerRows, tableBodyRows: bodyRows, tableColumns: columns }) => (\n              <Layout\n                headTableComponent={fixedHeaderComponent}\n                tableComponent={tableComponent}\n                headComponent={headComponent}\n                bodyComponent={bodyComponent}\n                containerComponent={containerComponent}\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {({ tableHeaderRows: headerRows }) =>\n                (isHeaderStubTableCell(params.tableRow, headerRows)\n                  ? <StubHeaderCell {...params} />\n                  : <StubCell {...params} />\n                )\n              }\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataCell {...{ getMessage, ...params }} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.object,\n  fixedHeaderComponent: PropTypes.func,\n};\n\nTable.defaultProps = {\n  fixedHeaderComponent: undefined,\n  columnExtensions: undefined,\n  messages: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Getter, Template, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <Plugin\n        name=\"TableSelection\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SelectionState' },\n          { name: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick\n                    selected={highlightRow && selection.indexOf(params.tableRow.rowId) !== -1}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </Plugin>\n    );\n  }\n}\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { toggleDetailRowExpanded } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRowIds: props.expandedRowIds || props.defaultExpandedRowIds,\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        expandedRowIds: () => this.props.onExpandedRowIdsChange,\n      },\n    );\n\n    this.toggleDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRowIds', toggleDetailRowExpanded);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      expandedRowIds,\n    } = nextProps;\n    this.setState({\n      ...expandedRowIds !== undefined ? { expandedRowIds } : null,\n    });\n  }\n  render() {\n    const { expandedRowIds } = this.state;\n\n    return (\n      <Plugin\n        name=\"RowDetailState\"\n      >\n        <Getter name=\"expandedDetailRowIds\" value={expandedRowIds} />\n        <Action name=\"toggleDetailRowExpanded\" action={this.toggleDetailRowExpanded} />\n      </Plugin>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRowIds: PropTypes.array,\n  defaultExpandedRowIds: PropTypes.array,\n  onExpandedRowIdsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRowIds: undefined,\n  defaultExpandedRowIds: [],\n  onExpandedRowIdsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, Plugin, TemplateConnector } from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = ({ tableBodyRows, expandedDetailRowIds }) =>\n      tableRowsWithExpandedDetail(tableBodyRows, expandedDetailRowIds, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedDetailRowIds }, { toggleDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedDetailRowIds, params.tableRow.rowId)}\n                  onToggle={() => toggleDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Cell\n              {...params}\n              row={params.tableRow.row}\n            >\n              <Content row={params.tableRow.row} />\n            </Cell>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, Plugin, TemplatePlaceholder, TemplateConnector } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = ({ tableBodyRows, isGroupRow }) =>\n  tableRowsWithGrouping(tableBodyRows, isGroupRow);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) =>\n      tableColumnsWithGrouping(\n        columns,\n        tableColumns,\n        grouping,\n        draftGrouping,\n        indentColumnWidth,\n        showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n      );\n\n    return (\n      <Plugin\n        name=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedGroups }, { toggleGroupExpanded }) => (\n                <TemplatePlaceholder\n                  name=\"valueFormatter\"\n                  params={{\n                    column: params.tableColumn.column,\n                    value: params.tableRow.row.value,\n                  }}\n                >\n                  {content => (\n                    <GroupCell\n                      {...params}\n                      row={params.tableRow.row}\n                      column={params.tableColumn.column}\n                      expanded={expandedGroups.indexOf(params.tableRow.row.compoundKey) !== -1}\n                      onToggle={() =>\n                        toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })}\n                    >\n                      {content}\n                    </GroupCell>\n                  )}\n                </TemplatePlaceholder>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        {GroupIndentCell && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isGroupIndentTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <GroupIndentCell\n                {...params}\n                row={params.tableRow.row}\n                column={params.tableColumn.column}\n              />\n            )}\n          </Template>\n        )}\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, Plugin, TemplateConnector } from '@devexpress/dx-react-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  getMessagesFormatter,\n  TABLE_DATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"TableHeaderRow\"\n        dependencies={[\n          { name: 'Table' },\n          { name: 'SortingState', optional: !showSortingControls },\n          { name: 'GroupingState', optional: !showGroupingControls },\n          { name: 'DragDropProvider', optional: true },\n          { name: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting,\n                isColumnSortingEnabled,\n                isColumnGroupingEnabled,\n                tableColumns,\n                draggingEnabled,\n                tableColumnResizingEnabled,\n              }, {\n                changeColumnSorting, changeColumnGrouping,\n                changeTableColumnWidth, draftTableColumnWidth, cancelTableColumnWidthDraft,\n              }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n                const sortingEnabled = isColumnSortingEnabled && isColumnSortingEnabled(columnName);\n                const groupingEnabled = isColumnGroupingEnabled &&\n                  isColumnGroupingEnabled(columnName) &&\n                  atLeastOneDataColumn;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    sortingEnabled={sortingEnabled}\n                    groupingEnabled={groupingEnabled}\n                    showSortingControls={showSortingControls}\n                    showGroupingControls={showGroupingControls}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    sortingDirection={showSortingControls\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    onSort={({ direction, keepOther }) =>\n                      changeColumnSorting({ columnName, direction, keepOther })}\n                    onGroup={() => changeColumnGrouping({ columnName })}\n                    onWidthChange={({ shift }) => changeTableColumnWidth({ columnName, shift })}\n                    onWidthDraft={({ shift }) => draftTableColumnWidth({ columnName, shift })}\n                    onWidthDraftCancel={() => cancelTableColumnWidthDraft()}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin } from '@devexpress/dx-react-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'FilteringState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableFilterRow extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n      tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ filters, isColumnFilteringEnabled }, { changeColumnFilter }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => changeColumnFilter({ columnName, config });\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : null,\n                      onValueChange: newValue => onFilter(newValue ? { value: newValue } : null),\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        filteringEnabled={isColumnFilteringEnabled(columnName)}\n                        onFilter={onFilter}\n                      >\n                        {content}\n                      </FilterCell>\n                      )\n                    }\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  messages: PropTypes.object,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  messages: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, TemplatePlaceholder, TemplateConnector, Plugin } from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n  { name: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = ({ tableBodyRows, editingRowIds, addedRows }) =>\n      tableRowsWithEditing(tableBodyRows, editingRowIds, addedRows, rowHeight);\n\n    return (\n      <Plugin\n        name=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                getCellValue,\n                createRowChange,\n                rowChanges,\n                isColumnEditingEnabled,\n              }, {\n                changeAddedRow,\n                changeRow,\n              }) => {\n                const { rowId, row } = params.tableRow;\n                const { column } = params.tableColumn;\n                const { name: columnName } = column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(rowChanges, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={column}\n                        value={value}\n                        editingEnabled={isColumnEditingEnabled(columnName)}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Template, Plugin, TemplateConnector } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Table' },\n];\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <Plugin\n        name=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.object,\n};\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Getter, Action } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  changeTableColumnWidth,\n  draftTableColumnWidth,\n  cancelTableColumnWidthDraft,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.columnWidths || props.defaultColumnWidths,\n      draftColumnWidths: [],\n    };\n\n    const stateHelper = createStateHelper(\n      this,\n      {\n        columnWidths: () => this.props.onColumnWidthsChange,\n      },\n    );\n\n    this.changeTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, changeTableColumnWidth);\n    this.draftTableColumnWidth =\n      stateHelper.applyReducer.bind(stateHelper, draftTableColumnWidth);\n    this.cancelTableColumnWidthDraft =\n      stateHelper.applyReducer.bind(stateHelper, cancelTableColumnWidthDraft);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      columnWidths,\n    } = nextProps;\n    this.setState({\n      ...columnWidths !== undefined ? { columnWidths } : null,\n    });\n  }\n  render() {\n    const { columnWidths, draftColumnWidths } = this.state;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithWidths(tableColumns, columnWidths, draftColumnWidths);\n\n    return (\n      <Plugin\n        name=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Action name=\"changeTableColumnWidth\" action={this.changeTableColumnWidth} />\n        <Action name=\"draftTableColumnWidth\" action={this.draftTableColumnWidth} />\n        <Action name=\"cancelTableColumnWidthDraft\" action={this.cancelTableColumnWidthDraft} />\n      </Plugin>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.array,\n  columnWidths: PropTypes.array,\n  onColumnWidthsChange: PropTypes.func,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: [],\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'PagingState' },\n];\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Template, TemplatePlaceholder, Plugin, TemplateConnector } from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nexport class GroupingPanel extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n\n      return (\n        <TemplateConnector>\n          {(\n            { sorting, isColumnSortingEnabled, isColumnGroupingEnabled },\n            { changeColumnGrouping, changeColumnSorting },\n          ) => {\n            const sortingEnabled = isColumnSortingEnabled && isColumnSortingEnabled(columnName);\n            const groupingEnabled = isColumnGroupingEnabled && isColumnGroupingEnabled(columnName);\n\n            return (\n              <Item\n                item={item}\n                sortingEnabled={sortingEnabled}\n                groupingEnabled={groupingEnabled}\n                showSortingControls={showSortingControls}\n                sortingDirection={showSortingControls\n                  ? getColumnSortingDirection(sorting, columnName) : undefined}\n                showGroupingControls={showGroupingControls}\n                onGroup={() => changeColumnGrouping({ columnName })}\n                onSort={({ direction, keepOther }) =>\n                  changeColumnSorting({ columnName, direction, keepOther })}\n              />\n            );\n          }}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={[\n          { name: 'GroupingState' },\n          { name: 'Toolbar' },\n          { name: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, grouping, draftGrouping, draggingEnabled, isColumnGroupingEnabled,\n            }, {\n              changeColumnGrouping, draftColumnGrouping, cancelColumnGroupingDraft,\n            }) => (\n              <Layout\n                items={groupingPanelItems(columns, grouping, draftGrouping)}\n                isColumnGroupingEnabled={isColumnGroupingEnabled}\n                draggingEnabled={draggingEnabled}\n                onGroup={changeColumnGrouping}\n                onGroupDraft={draftColumnGrouping}\n                onGroupDraftCancel={cancelColumnGroupingDraft}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nGroupingPanel.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanel.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Plugin, Template } from '@devexpress/dx-react-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n    } = this.props;\n    return (\n      <Plugin name=\"DataTypeProvider\">\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </Plugin>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Action,\n  Getter,\n  Plugin,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  getMessagesFormatter,\n  toggleColumn,\n  visibleTableColumns,\n  tableDataColumnsExist,\n  getColumnExtensionValueGetter,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { name: 'Table' },\n];\n\nconst visibleTableColumnsComputed = ({ tableColumns, hiddenColumnNames }) =>\n  visibleTableColumns(tableColumns, hiddenColumnNames);\n\nconst columnExtensionValueGetter = (columnExtensions, defaultValue) =>\n  getColumnExtensionValueGetter(columnExtensions, 'togglingEnabled', defaultValue);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumnNames: props.hiddenColumnNames || props.defaultHiddenColumnNames,\n    };\n    const stateHelper = createStateHelper(\n      this,\n      {\n        hiddenColumnNames: () => this.props.onHiddenColumnNamesChange,\n      },\n    );\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumnNames', toggleColumn);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      hiddenColumnNames,\n    } = nextProps;\n    this.setState({\n      ...hiddenColumnNames !== undefined ? { hiddenColumnNames } : null,\n    });\n  }\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { hiddenColumnNames } = this.state;\n    const { columnExtensions, columnTogglingEnabled } = this.props;\n\n    return (\n      <Plugin\n        name=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumnNames\" value={hiddenColumnNames} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Getter\n          name=\"isColumnTogglingEnabled\"\n          value={columnExtensionValueGetter(columnExtensions, columnTogglingEnabled)}\n        />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ tableColumns }) =>\n                (tableDataColumnsExist(tableColumns)\n                ? <TemplatePlaceholder />\n                : <EmptyMessage\n                  getMessage={getMessage}\n                  {...params}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumnNames: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnNamesChange: PropTypes.func,\n  messages: PropTypes.object,\n  columnExtensions: PropTypes.array,\n  columnTogglingEnabled: PropTypes.bool,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumnNames: undefined,\n  defaultHiddenColumnNames: [],\n  onHiddenColumnNamesChange: undefined,\n  messages: {},\n  columnExtensions: undefined,\n  columnTogglingEnabled: true,\n};\n","/* globals requestAnimationFrame */\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n} from '@devexpress/dx-grid-core';\n\nconst TABLE_FLEX_TYPE = 'flex';\n\nconst areColumnsChanged = (prevColumns, nextColumns) => {\n  if (prevColumns.length !== nextColumns.length) return true;\n  const prevKeys = prevColumns.map(column => column.key);\n  return nextColumns.find(column =>\n    prevKeys.indexOf(column.key) === -1) !== undefined;\n};\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.tableNode = null;\n\n    this.setRef = (ref) => { if (ref) this.tableNode = ref; };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { columns: nextColumns } = nextProps;\n    const { columns } = this.props;\n\n    if (areColumnsChanged(columns, nextColumns)) return;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const tableWidth = findDOMNode(this).scrollWidth;\n    this.animations = getAnimations(columns, nextColumns, tableWidth, this.animations);\n    this.processAnimationFrame();\n  }\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE, type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n  processAnimationFrame() {\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (this.state.animationState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n\n    requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        columns={columns}\n        minWidth={minWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { getTableRowColumnsWithColSpan } from '@devexpress/dx-grid-core';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          getTableRowColumnsWithColSpan(columns, row.colSpanStart)\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={column.colSpan}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","const OVERSCAN = 3;\n\nexport const STUB_TYPE = 'stub';\nconst VISIBLE_TYPE = 'visible';\nconst OVERSCAN_TYPE = 'overscan';\n\nconst STARTING_KEY = 'starting';\nconst ENDING_KEY = 'ending';\n\nexport const getVisibleRows = (rows, viewportTop, viewportHeight, getRowHeight) => {\n  const result = [];\n\n  const viewportBottom = viewportTop + viewportHeight;\n  let topPosition = 0;\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const lastIndex = result.length - 1;\n    const last = result[lastIndex];\n\n    const height = getRowHeight(row);\n    const bottomPosition = topPosition + height;\n    if (\n      (topPosition >= viewportTop && topPosition < viewportBottom) ||\n      (bottomPosition > viewportTop && bottomPosition <= viewportBottom) ||\n      (topPosition < viewportTop && bottomPosition > viewportBottom)\n    ) {\n      if (last && last.type === STUB_TYPE) {\n        rows.slice(Math.max(0, i - OVERSCAN), i).forEach((overscanRow) => {\n          const overscanRowSize = getRowHeight(overscanRow);\n          last.height -= overscanRowSize;\n          result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n        });\n        if (last.height === 0) {\n          result.splice(lastIndex, 1);\n        }\n      }\n      result.push({ type: VISIBLE_TYPE, height, row });\n    } else if (last && last.type === STUB_TYPE) {\n      last.height += height;\n    } else if (i > 0) {\n      rows.slice(i, i + OVERSCAN).forEach((overscanRow) => {\n        const overscanRowSize = getRowHeight(overscanRow);\n        result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n      });\n      i += OVERSCAN - 1;\n      if (i < rows.length) {\n        result.push({ type: STUB_TYPE, key: ENDING_KEY, height: 0 });\n      }\n    } else {\n      result.push({ type: STUB_TYPE, key: STARTING_KEY, height });\n    }\n    topPosition = bottomPosition;\n  }\n\n  return result;\n};\n\nconst getRowPosition = (visibleRows, index) => visibleRows\n  .slice(0, index)\n  .reduce((acc, row) => acc + row.height, 0);\n\nexport const firstVisibleRowOffset = (prevVisibleRows, visibleRows) => {\n  const firstVisibleRowIndex = visibleRows.findIndex(row => row.type === VISIBLE_TYPE);\n  if (firstVisibleRowIndex === -1) return 0;\n\n  const firstVisibleRow = visibleRows[firstVisibleRowIndex].row;\n  const prevIndex = prevVisibleRows.findIndex(row => row.row === firstVisibleRow);\n  if (prevIndex === -1) return 0;\n\n  const position = getRowPosition(visibleRows, firstVisibleRowIndex);\n  const prevPosition = getRowPosition(prevVisibleRows, prevIndex);\n  return position - prevPosition;\n};\n","import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowLayout } from './row-layout';\nimport {\n  getVisibleRows,\n  firstVisibleRowOffset,\n} from './virtual-table-utils';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rowHeights: new Map(),\n      viewportTop: 0,\n    };\n\n    this.rowRefs = new Map();\n    this.updateViewport = this.updateViewport.bind(this);\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n  }\n  componentDidMount() {\n    this.storeRowHeights();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.headerRows !== nextProps.headerRows ||\n      this.props.rows !== nextProps.rows\n    ) {\n      const { rowHeights: prevRowHeight } = this.state;\n      this.setState({\n        rowHeights: [...nextProps.headerRows, ...nextProps.rows].reduce(\n          (acc, row) => {\n            const rowHeight = prevRowHeight.get(row.key);\n            if (rowHeight !== undefined) {\n              acc.set(row.key, rowHeight);\n            }\n            return acc;\n          },\n          new Map(),\n        ),\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.storeRowHeights();\n  }\n  getRowHeight(row) {\n    const storedHeight = this.state.rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return this.props.estimatedRowHeight;\n  }\n  getVisibleRows({ rows, headerRows, height } = this.props, top = this.state.viewportTop) {\n    const headHeight = headerRows.reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    return getVisibleRows(rows, top, height - headHeight, this.getRowHeight);\n  }\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref).getBoundingClientRect().height])\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const prevVisibleBodyRows = this.getVisibleRows();\n\n      const { rowHeights } = this.state;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      this.setState({\n        rowHeights,\n      });\n\n      const visibleBodyRows = this.getVisibleRows();\n      const scrollOffset = firstVisibleRowOffset(prevVisibleBodyRows, visibleBodyRows);\n      if (scrollOffset !== 0) {\n        // eslint-disable-next-line react/no-find-dom-node\n        findDOMNode(this).scrollTop += scrollOffset;\n      }\n    }\n  }\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n  updateViewport(e) {\n    const node = e.target;\n\n    if (node !== e.currentTarget) {\n      return;\n    }\n\n    // NOTE: prevent iOS to flicker in bounces\n    if (node.scrollTop < 0 ||\n      node.scrollLeft < 0 ||\n      node.scrollLeft + node.clientWidth > node.scrollWidth ||\n      node.scrollTop + node.clientHeight > node.scrollHeight) {\n      return;\n    }\n\n    if (this.viewportTop !== node.scrollTop) {\n      this.setState({\n        viewportTop: node.scrollTop,\n      });\n    }\n  }\n  render() {\n    const {\n      headerRows, columns,\n      minWidth, height,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      rowComponent, cellComponent,\n    } = this.props;\n    const visibleBodyRows = this.getVisibleRows();\n\n    return (\n      <Container\n        style={{ height: `${height}px` }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && (\n          <HeadTable\n            style={{ minWidth: `${minWidth}px` }}\n          >\n            <ColumnGroup columns={columns} />\n            <Head>\n              {headerRows.map(row => (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              ))}\n            </Head>\n          </HeadTable>\n        )}\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          <Body>\n            {visibleBodyRows.map((visibleRow) => {\n              if (visibleRow.type === 'stub') {\n                return (\n                  <tr key={visibleRow.key} style={{ height: `${visibleRow.height}px` }} />\n                );\n              }\n              const { row } = visibleRow;\n              return (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              );\n            })}\n          </Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      rows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n            />\n          )}\n          <RowsBlockLayout\n            rows={rows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n          />\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dragging: false,\n    };\n  }\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragStart,\n      onDragEnd,\n    } = this.props;\n    const { dragging } = this.state;\n\n    const itemElement = <Item item={{ ...item, draft: dragging || item.draft }} />;\n\n    return (draggingEnabled ? (\n      <DragSource\n        payload={[{ type: 'column', columnName: item.column.name }]}\n        onStart={() => {\n          this.setState({ dragging: true });\n          onDragStart();\n        }}\n        onEnd={() => {\n          this.setState({ dragging: false });\n          onDragEnd();\n        }}\n      >\n        {itemElement}\n      </DragSource>\n    ) : (\n      itemElement\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragStart: () => {},\n  onDragEnd: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport { getGroupCellTargetIndex } from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n    this.handleDragEvent = (eventHandler, { payload, ...restArgs }) => {\n      const { isColumnGroupingEnabled } = this.props;\n      const { columnName } = payload[0];\n\n      if (isColumnGroupingEnabled(columnName)) {\n        eventHandler({ payload, ...restArgs });\n      }\n    };\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onGroupDraft, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onGroupDraft } = this.props;\n      const { sourceColumnName } = this.state;\n      if (!this.draggingColumnName) {\n        this.resetState();\n        return;\n      }\n      onGroupDraft({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragStart = (columnName) => {\n      this.draggingColumnName = columnName;\n    };\n    this.onDragEnd = () => {\n      this.draggingColumnName = null;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n  resetState() {\n    const { onGroupDraftCancel } = this.props;\n    onGroupDraftCancel();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n      isColumnGroupingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map((item) => {\n          const { name: columnName } = item.column;\n          return (\n            <ItemLayout\n              key={columnName}\n              ref={element => element && this.itemRefs.push(element)}\n              item={item}\n              itemComponent={Item}\n              draggingEnabled={draggingEnabled && isColumnGroupingEnabled(columnName)}\n              onDragStart={() => this.onDragStart(columnName)}\n              onDragEnd={this.onDragEnd}\n            />\n          );\n        })}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={args => this.handleDragEvent(this.onEnter, args)}\n          onOver={args => this.handleDragEvent(this.onOver, args)}\n          onLeave={args => this.handleDragEvent(this.onLeave, args)}\n          onDrop={args => this.handleDragEvent(this.onDrop, args)}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.bool,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  isColumnGroupingEnabled: PropTypes.func,\n  onGroupDraft: PropTypes.func,\n  onGroupDraftCancel: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  isColumnGroupingEnabled: () => {},\n  onGroupDraft: () => {},\n  onGroupDraftCancel: () => {},\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Getter, Action, Plugin } from '@devexpress/dx-react-core';\nimport { changeSearchValue, pushSearchFilterExpression } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SearchState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value || props.defaultValue,\n    };\n    const stateHelper = createStateHelper(this, {\n      value: () => this.props.onValueChange,\n    });\n\n    this.changeValue = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'value', changeSearchValue);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      value,\n    } = nextProps;\n    this.setState({\n      ...value !== undefined ? { value } : null,\n    });\n  }\n  render() {\n    const { value } = this.state;\n\n    return (\n      <Plugin\n        name=\"SearchState\"\n      >\n        <Getter name=\"filterExpression\" computed={pushSearchFilterExpression(value)} />\n        <Getter name=\"searchValue\" value={value} />\n        <Action name=\"changeSearchValue\" action={this.changeValue} />\n      </Plugin>\n    );\n  }\n}\n\nSearchState.propTypes = {\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onValueChange: PropTypes.func,\n};\n\nSearchState.defaultProps = {\n  value: undefined,\n  defaultValue: '',\n  onValueChange: undefined,\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport {\n  Template,\n  TemplatePlaceholder,\n  Plugin,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'SearchState' },\n];\n\nexport class SearchPanel extends React.PureComponent {\n  render() {\n    const { inputComponent: Input, messages } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <Plugin\n        name=\"SearchPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ searchValue }, { changeSearchValue }) => (\n              <Input\n                value={searchValue}\n                onValueChange={changeSearchValue}\n                getMessage={getMessage}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  inputComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nSearchPanel.defaultProps = {\n  messages: {},\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","React.createElement","Getter","rowIdGetter","cellValueGetter","Template","TemplatePlaceholder","React","propTypes","PropTypes","isRequired","defaultProps","undefined","Grid","children","pluginDependencies","name","ColumnChooser","state","handleToggle","bind","handleHide","buttonRef","button","setState","visible","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","hiddenColumnNames","isColumnTogglingEnabled","toggleColumnVisibility","map","item","columnName","column","togglingEnabled","STATE_CONSISTENCY_TIMEOUT","createStateHelper","component","controlledStateProperties","stateConsistencyTimers","checkStateConsistency","propertyName","notifyStateChange","nextState","keys","forEach","changeEvent","setTimeout","lastStateUpdater","initialState","applyReducer","reduce","payload","callback","stateUpdater","prevState","stateChange","applyFieldReducer","field","columnExtensionValueGetter","columnExtensions","defaultValue","getColumnExtensionValueGetter","FilteringState","filters","defaultFilters","stateHelper","onFiltersChange","changeColumnFilter","nextProps","columnFilteringEnabled","pushFilterExpression","Action","optional","IntegratedFiltering","getColumnPredicate","getColumnExtension","predicate","rowsComputed","filterExpression","isGroupRow","getRowLevelKey","filteredRows","EditingState","editingRowIds","defaultEditingRowIds","addedRows","defaultAddedRows","rowChanges","defaultRowChanges","deletedRowIds","defaultDeletedRowIds","onEditingRowIdsChange","onAddedRowsChange","onRowChangesChange","onDeletedRowIdsChange","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changedRowsByIds","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","addedRowsByIds","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","createRowChange","columnEditingEnabled","createRowChangeGetter","PagingState","currentPage","defaultCurrentPage","pageSize","defaultPageSize","onCurrentPageChange","onPageSizeChange","setCurrentPage","setPageSize","clamp","value","max","Math","min","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","paginatedRows","currentPageComputed","totalCount","totalPages","pageCount","adjustedCurrentPage","IntegratedPaging","CustomPaging","dependencies","adjustSortIndex","sortIndex","grouping","sorting","slice","acc","columnGrouping","columnSortingIndex","findIndex","columnSorting","GroupingState","defaultGrouping","expandedGroups","defaultExpandedGroups","onGroupingChange","onExpandedGroupsChange","changeColumnGrouping","toggleGroupExpanded","toggleExpandedGroups","draftColumnGrouping","cancelColumnGroupingDraft","changeColumnSorting","keepOther","restParams","groupingIndex","getters","actions","groupIndex","prevGrouping","prevGroupingIndex","length","draftGrouping","columnGroupingEnabled","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","selection","defaultSelection","onSelectionChange","toggleSelection","rowsWithAvailableToSelectComputed","rowsWithAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","selectAllAvailableComputed","availableToSelect","toggleSelectAll","unwrapRowsComputed","unwrapSelectedRows","IntegratedSelection","SortingState","defaultSorting","persistentSortedColumns","getPersistentSortedColumns","onSortingChange","calculateKeepOther","columnSortingEnabled","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","change","clientOffset","Column","columnComponent","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReordering","defaultOrder","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","order","getState","sourceColumnIndex","targetColumnIndex","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumns","columnIndex","TABLE_DATA_TYPE","tableColumn","getter","ensureCellDimensionGetters","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","Table","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableComponent","headComponent","bodyComponent","fixedHeaderComponent","tableColumnsComputed","tableColumnsWithDataRows","headerRows","bodyRows","tableBodyRows","isHeaderStubTableCell","isDataTableCell","row","isNoDataTableRow","isDataTableRow","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","select","isSelectTableCell","rowId","RowDetailState","expandedRowIds","defaultExpandedRowIds","onExpandedRowIdsChange","toggleDetailRowExpanded","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","expandedDetailRowIds","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","tableRowsWithGrouping","showColumnWhenGroupedGetter","showColumnsWhenGrouped","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","isGroupTableRow","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","isHeadingTableCell","isColumnSortingEnabled","isColumnGroupingEnabled","draggingEnabled","tableColumnResizingEnabled","changeTableColumnWidth","draftTableColumnWidth","cancelTableColumnWidthDraft","atLeastOneDataColumn","sortingEnabled","groupingEnabled","getColumnSortingDirection","direction","shift","isHeadingTableRow","TableFilterRow","FilterCell","FilterRow","tableHeaderRowsWithFilter","isFilterTableCell","isColumnFilteringEnabled","getColumnFilterConfig","onFilter","config","newValue","isFilterTableRow","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isColumnEditingEnabled","isNew","isAddedTableRow","changedRow","getRowChange","onValueChange","changeArgs","isEditTableRow","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TableColumnResizing","columnWidths","defaultColumnWidths","onColumnWidthsChange","draftColumnWidths","tableColumnsWithWidths","PagingPanel","Pager","pageSizes","GroupingPanel","EmptyMessage","emptyMessageComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","editorComponent","includes","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumnNames","onHiddenColumnNamesChange","toggleColumn","columnTogglingEnabled","tableDataColumnsExist","TABLE_FLEX_TYPE","areColumnsChanged","prevColumns","nextColumns","prevKeys","key","TableLayout","Map","animations","tableNode","setRef","ref","tableWidth","findDOMNode","scrollWidth","getAnimations","processAnimationFrame","animationState","result","isFixedWidth","push","size","has","get","filterActiveAnimations","evalAnimations","minColumnWidth","restProps","getColumns","minWidth","ColumnGroup","getColumnStyle","getRowStyle","height","RowLayout","colSpanStart","colSpan","OVERSCAN","STUB_TYPE","VISIBLE_TYPE","OVERSCAN_TYPE","STARTING_KEY","ENDING_KEY","getVisibleRows","viewportTop","viewportHeight","getRowHeight","viewportBottom","topPosition","i","lastIndex","last","bottomPosition","overscanRow","overscanRowSize","splice","getRowPosition","visibleRows","index","firstVisibleRowOffset","prevVisibleRows","firstVisibleRowIndex","firstVisibleRow","prevIndex","position","prevPosition","VirtualTableLayout","rowRefs","updateViewport","registerRowRef","storeRowHeights","prevRowHeight","rowHeights","set","storedHeight","estimatedRowHeight","top","headHeight","rowsWithChangedHeights","Array","from","entries","getBoundingClientRect","prevVisibleBodyRows","visibleBodyRows","scrollOffset","scrollTop","delete","e","node","target","currentTarget","scrollLeft","clientWidth","clientHeight","scrollHeight","HeadTable","headTableComponent","Head","Body","visibleRow","RowsBlockLayout","Block","blockComponent","StaticTableLayout","ItemLayout","onDragStart","onDragEnd","dragging","itemElement","draft","GroupPanelLayout","handleDragEvent","eventHandler","restArgs","onEnter","onGroupDraft","items","prevTargetItemIndex","targetItemIndex","itemGeometries","itemRefs","sourceItemIndex","getGroupCellTargetIndex","draggingColumnName","resetState","onGroup","onGroupDraftCancel","groupPanel","element","args","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent","SearchState","changeValue","changeSearchValue","pushSearchFilterExpression","SearchPanel","Input","inputComponent","searchValue"],"mappings":"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"}